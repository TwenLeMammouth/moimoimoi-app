
// import './globals.css'
import type { Metadata } from "next";
import { Quicksand } from "next/font/google";
import {NextIntlClientProvider , hasLocale} from 'next-intl'
import {notFound} from 'next/navigation';
import {routing} from '@/i18n/routing';
import {getMessages} from 'next-intl/server'
import type {ReactNode} from 'react'
import { SupabaseProvider } from '@/components/providers/SupabaseProvider';
import Header from "@/components/Header";

type LayoutProps = {
  children: ReactNode
  params: Promise<{locale: string}>
}

const quicksand = Quicksand({
  subsets: ['latin'],
  weight: ['400', '600', '700'],
  variable: '--font-ui-primary',
})

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({children, params}: LayoutProps) {
  const {locale} = await params           // ⬅️ on attend params

  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  const messages = await getMessages({locale})
  return (
    <html lang={locale}>
      <body className="min-h-screen bg-mmm text-ink">
        {/* halo subtil */}
        <div className="pointer-events-none fixed inset-0 opacity-[.6] mix-blend-screen"
            style={{background:
              'radial-gradient(60% 40% at 70% 0%, rgba(112,76,182,.18), transparent 60%),' +
              'radial-gradient(40% 30% at 10% 20%, rgba(142,110,212,.10), transparent 60%)'
            }}
        />
        <NextIntlClientProvider 
          messages={messages} locale={locale}
          >
            <SupabaseProvider>
              <Header />
              {children}
            </SupabaseProvider>
        </NextIntlClientProvider>

      </body>
    </html>
  )
}
